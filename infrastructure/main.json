{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "4644906876531795748"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "baseName": {
      "type": "string",
      "defaultValue": "aif",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Custom name for the Function App (optional)"
      }
    },
    "githubActionsServicePrincipalId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "GitHub Actions Service Principal Object ID for role assignments (optional)"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "[parameters('environment')]",
        "ManagedBy": "Bicep",
        "Project": "AzureAIFoundry"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
    "aiFoundryName": "[format('{0}-foundry-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "projectName": "[format('{0}-project-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "storageBlobDataOwnerRoleId": "b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
    "storageBlobDataContributorRoleId": "ba92f5b4-2d11-453d-a403-e96b0029c9fe",
    "storageQueueDataContributorRoleId": "974c5e8b-45b9-4653-ba55-5f855dd0fb88",
    "storageTableDataContributorRoleId": "0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
    "monitoringMetricsPublisherRoleId": "3913510d-42f4-4e42-8a64-420c390055eb",
    "azureAIFoundryAgentCreatorRoleId": "76ddb49b-0538-4c6b-9861-5b22c6b5e8ce",
    "searchServiceContributorRoleId": "7ca78c08-252a-4471-8644-bb5ff32d4ba0",
    "searchIndexDataContributorRoleId": "8ebe5a00-799e-43f5-93ac-243d3dce84a7",
    "searchIndexDataReaderRoleId": "1407120a-92aa-4202-b7e9-c0e197c71c8f"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}/{2}', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')), 'default', format('app-package-{0}-{1}', take(parameters('baseName'), 32), take(variables('uniqueSuffix'), 7)))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}/{1}', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {}
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}/{1}', if(not(equals(parameters('functionAppName'), '')), parameters('functionAppName'), format('{0}-func-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), 'appsettings')]",
      "properties": {
        "AzureWebJobsStorage__accountName": "[format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
        "AzureWebJobsStorage__credential": "managedidentity",
        "AzureWebJobsStorage__clientId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').clientId]",
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2020-02-02').ConnectionString]",
        "APPLICATIONINSIGHTS_AUTHENTICATION_STRING": "[format('ClientId={0};Authorization=AAD', reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').clientId)]",
        "PYTHON_ISOLATE_WORKER_DEPENDENCIES": "1",
        "AzureWebJobsDisableHomepage": "true"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Web/sites', if(not(equals(parameters('functionAppName'), '')), parameters('functionAppName'), format('{0}-func-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2025-04-01-preview",
      "name": "[variables('aiFoundryName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "AIServices",
      "sku": {
        "name": "S0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "allowProjectManagement": true,
        "customSubDomainName": "[variables('aiFoundryName')]",
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow",
          "virtualNetworkRules": [],
          "ipRules": []
        },
        "disableLocalAuth": false
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts/projects",
      "apiVersion": "2025-04-01-preview",
      "name": "[format('{0}/{1}', variables('aiFoundryName'), variables('projectName'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "description": "Azure AI Foundry Project for Agent deployment",
        "displayName": "[variables('projectName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-05-01",
      "name": "[format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": false,
        "dnsEndpointType": "Standard",
        "minimumTlsVersion": "TLS1_2",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "2024-06-01-preview",
      "name": "[format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('Purpose', 'AI Search for Knowledge Retrieval'))]",
      "sku": {
        "name": "basic"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "replicaCount": 1,
        "partitionCount": 1,
        "hostingMode": "default",
        "publicNetworkAccess": "enabled",
        "networkRuleSet": {
          "bypass": "AzurePortal",
          "ipRules": []
        },
        "encryptionWithCmk": {
          "enforcement": "Unspecified"
        },
        "disableLocalAuth": false,
        "authOptions": {
          "aadOrApiKey": {
            "aadAuthFailureMode": "http401WithBearerChallenge"
          }
        },
        "semanticSearch": "free"
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2024-04-01",
      "name": "[format('{0}-asp-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "functionapp",
      "sku": {
        "tier": "FlexConsumption",
        "name": "FC1"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2024-04-01",
      "name": "[if(not(equals(parameters('functionAppName'), '')), parameters('functionAppName'), format('{0}-func-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "location": "[parameters('location')]",
      "tags": "[union(parameters('tags'), createObject('Purpose', 'Agent Function Tools'))]",
      "kind": "functionapp,linux",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))))]": {}
        }
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "httpsOnly": true,
        "siteConfig": {
          "minTlsVersion": "1.2"
        },
        "functionAppConfig": {
          "deployment": {
            "storage": {
              "type": "blobContainer",
              "value": "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-05-01').primaryEndpoints.blob, format('app-package-{0}-{1}', take(parameters('baseName'), 32), take(variables('uniqueSuffix'), 7)))]",
              "authentication": {
                "type": "UserAssignedIdentity",
                "userAssignedIdentityResourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
              }
            }
          },
          "scaleAndConcurrency": {
            "alwaysReady": [
              {
                "name": "http",
                "instanceCount": 1
              }
            ],
            "maximumInstanceCount": 100,
            "instanceMemoryMB": 2048
          },
          "runtime": {
            "name": "python",
            "version": "3.11"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')), 'default', format('app-package-{0}-{1}', take(parameters('baseName'), 32), take(variables('uniqueSuffix'), 7)))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-logs-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": 1
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "DisableLocalAuth": true,
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), 'Storage Blob Data Owner')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataOwnerRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity access to storage blobs"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), 'Storage Blob Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageBlobDataContributorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity access to storage blob operations"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), 'Storage Queue Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageQueueDataContributorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity access to storage queues"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), 'Storage Table Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('storageTableDataContributorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity access to storage tables"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Insights/components/{0}', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Insights/components', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), 'Monitoring Metrics Publisher')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('monitoringMetricsPublisherRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity access to publish metrics to Application Insights"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.CognitiveServices/accounts/{0}', variables('aiFoundryName'))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), variables('azureAIFoundryAgentCreatorRoleId'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('azureAIFoundryAgentCreatorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity access to create and manage agents in Azure AI Foundry"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), variables('searchServiceContributorRoleId'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('searchServiceContributorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity contributor access to Azure AI Search service"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), variables('searchIndexDataContributorRoleId'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('searchIndexDataContributorRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants managed identity contributor access to search indexes for data ingestion"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Search/searchServices/{0}', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('projectName')), variables('searchIndexDataReaderRoleId'))]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('searchIndexDataReaderRoleId'))]",
        "principalId": "[reference(resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('projectName')), '2025-04-01-preview', 'full').identity.principalId]",
        "principalType": "ServicePrincipal",
        "description": "Grants AI Foundry project read access to search indexes for agent queries"
      },
      "dependsOn": [
        "[resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('projectName'))]",
        "[resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
      ]
    }
  ],
  "outputs": {
    "aiFoundryName": {
      "type": "string",
      "value": "[variables('aiFoundryName')]"
    },
    "aiFoundryId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName'))]"
    },
    "aiFoundryEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiFoundryName')), '2025-04-01-preview').endpoint]"
    },
    "projectName": {
      "type": "string",
      "value": "[variables('projectName')]"
    },
    "projectId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts/projects', variables('aiFoundryName'), variables('projectName'))]"
    },
    "projectEndpoint": {
      "type": "string",
      "value": "[format('https://{0}.services.ai.azure.com/api/projects/{1}', variables('aiFoundryName'), variables('projectName'))]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[if(not(equals(parameters('functionAppName'), '')), parameters('functionAppName'), format('{0}-func-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', if(not(equals(parameters('functionAppName'), '')), parameters('functionAppName'), format('{0}-func-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))), '2024-04-01').defaultHostName)]"
    },
    "functionAppPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').principalId]"
    },
    "userAssignedIdentityId": {
      "type": "string",
      "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
    },
    "userAssignedIdentityClientId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2023-01-31').clientId]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2020-02-02').ConnectionString]"
    },
    "applicationInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-appins-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2020-02-02').InstrumentationKey]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[format('{0}-logs-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
    },
    "searchServiceName": {
      "type": "string",
      "value": "[format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]"
    },
    "searchServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}.search.windows.net', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
    },
    "searchServiceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')))]"
    },
    "searchServicePrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Search/searchServices', format('{0}-search-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))), '2024-06-01-preview', 'full').identity.principalId]"
    }
  }
}