{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.31.92.45157",
      "templateHash": "7016230622998832597"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Azure region for all resources"
      }
    },
    "baseName": {
      "type": "string",
      "defaultValue": "aif",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "Base name for all resources"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {
        "Environment": "[parameters('environment')]",
        "ManagedBy": "Bicep",
        "Project": "AzureAIFoundry"
      },
      "metadata": {
        "description": "Tags to apply to all resources"
      }
    }
  },
  "variables": {
    "uniqueSuffix": "[substring(uniqueString(resourceGroup().id), 0, 6)]",
    "aiHubName": "[format('{0}-hub-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "projectName": "[format('{0}-project-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "aiServicesName": "[format('{0}-ais-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "storageName": "[replace(format('{0}st{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')), '-', '')]",
    "keyVaultName": "[format('{0}-kv-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "appInsightsName": "[format('{0}-ai-{1}-{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix'))]",
    "containerRegistryName": "[replace(format('{0}cr{1}{2}', parameters('baseName'), parameters('environment'), variables('uniqueSuffix')), '-', '')]"
  },
  "resources": [
    {
      "type": "Microsoft.MachineLearningServices/workspaces/connections",
      "apiVersion": "2024-10-01-preview",
      "name": "[format('{0}/{1}', variables('aiHubName'), format('{0}-connection-AIServices', variables('aiHubName')))]",
      "properties": {
        "category": "AIServices",
        "target": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2024-10-01').endpoint]",
        "authType": "AAD",
        "isSharedToAll": true,
        "metadata": {
          "ApiType": "Azure",
          "ResourceId": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[variables('storageName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot",
        "allowBlobPublicAccess": false,
        "minimumTlsVersion": "TLS1_2",
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enableRbacAuthorization": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 90,
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "DisableIpMasking": false,
        "DisableLocalAuth": false,
        "Flow_Type": "Bluefield",
        "ForceCustomerStorageForProfiler": false,
        "ImmediatePurgeDataOn30Days": true,
        "IngestionMode": "ApplicationInsights",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true,
        "publicNetworkAccess": "Enabled"
      }
    },
    {
      "type": "Microsoft.CognitiveServices/accounts",
      "apiVersion": "2024-10-01",
      "name": "[variables('aiServicesName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "S0"
      },
      "kind": "AIServices",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "customSubDomainName": "[variables('aiServicesName')]",
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "defaultAction": "Allow"
        },
        "apiProperties": {
          "statisticsEnabled": false
        }
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-10-01-preview",
      "name": "[variables('aiHubName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "hub",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "friendlyName": "[variables('aiHubName')]",
        "description": "Azure AI Foundry Hub for agent deployment",
        "keyVault": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "storageAccount": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]",
        "applicationInsights": "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "containerRegistry": "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
        "systemDatastoresAuthMode": "identity"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
      ]
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2024-10-01-preview",
      "name": "[variables('projectName')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "kind": "Project",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "friendlyName": "[variables('projectName')]",
        "description": "AI Foundry project for agent deployment",
        "hubResourceId": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]",
        "systemDatastoresAuthMode": "identity"
      },
      "dependsOn": [
        "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
      ]
    }
  ],
  "outputs": {
    "aiHubName": {
      "type": "string",
      "value": "[variables('aiHubName')]"
    },
    "aiHubId": {
      "type": "string",
      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('aiHubName'))]"
    },
    "projectName": {
      "type": "string",
      "value": "[variables('projectName')]"
    },
    "projectId": {
      "type": "string",
      "value": "[resourceId('Microsoft.MachineLearningServices/workspaces', variables('projectName'))]"
    },
    "aiServicesName": {
      "type": "string",
      "value": "[variables('aiServicesName')]"
    },
    "aiServicesEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName')), '2024-10-01').endpoint]"
    },
    "aiServicesId": {
      "type": "string",
      "value": "[resourceId('Microsoft.CognitiveServices/accounts', variables('aiServicesName'))]"
    },
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageName')]"
    },
    "storageAccountId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[variables('appInsightsName')]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[variables('containerRegistryName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "value": "[parameters('location')]"
    }
  }
}